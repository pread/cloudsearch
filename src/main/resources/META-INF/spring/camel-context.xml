<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:camelcxf="http://camel.apache.org/schema/cxf"
       xmlns:cxf="http://cxf.apache.org/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://camel.apache.org/schema/spring
          http://camel.apache.org/schema/spring/camel-spring.xsd
          http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
          http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
          http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

    <!-- the camel context -->
    <camel:camelContext id="cxfrs_context" trace="true" streamCache="false">

        <camel:contextScan/>

        <!-- Catch the authorization exception and set the Access Denied message back -->
        <camel:onException>
            <camel:exception>org.apache.camel.CamelAuthorizationException</camel:exception>
            <camel:handled>
                <camel:constant>true</camel:constant>
            </camel:handled>
            <camel:transform>
                <camel:simple>Access Denied with the Policy of ${exception.policyId} !</camel:simple>
            </camel:transform>
        </camel:onException>

    </camel:camelContext>


</beans>